{"version":3,"sources":["redux/counter/counetr-types.js","redux/counter/counter-actions.js","components/Counter/Controls.js","components/Counter/Value.js","components/Counter/Step.js","components/Counter/Counter.js","App.js","redux/counter/counter-reducer.js","redux/store.js","index.js"],"names":["value","type","types","payload","step","connect","state","counter","dispatch","onIncrement","actions","onDecrement","className","onClick","onChange","e","Number","target","Counter","App","Component","counterReducer","combineReducers","action","rootReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAIe,EAJG,oBAIH,EAHG,oBAGH,EAFK,qBCeL,EAfU,SAAAA,GAAK,MAAK,CACjCC,KAAMC,EACNC,QAASH,IAaI,EAVU,SAAAA,GAAK,MAAK,CACjCC,KAAMC,EACNC,QAASH,IAQI,EALW,SAAAI,GAAI,MAAK,CACjCH,KAAMC,EACNC,QAASC,I,OCYIC,eAXS,SAAAC,GACtB,MAAO,CACLF,KAAME,EAAMC,QAAQH,SAIG,SAAAI,GAAQ,MAAK,CACtCC,YAAa,SAAAT,GAAK,OAAIQ,EAASE,EAAyBV,KACxDW,YAAa,SAAAX,GAAK,OAAIQ,EAASE,EAAyBV,QAG3CK,EAtBE,SAAC,GAAD,IAAGD,EAAH,EAAGA,KAAMK,EAAT,EAASA,YAAaE,EAAtB,EAAsBA,YAAtB,OACf,sBAAKC,UAAU,oBAAf,UACE,yBAAQX,KAAK,SAASY,QAAS,kBAAMJ,EAAYL,IAAjD,iFACgBA,KAEhB,yBAAQH,KAAK,SAASY,QAAS,kBAAMF,EAAYP,IAAjD,iFACgBA,WCCLC,eANS,SAAAC,GACtB,MAAO,CACLN,MAAOM,EAAMC,QAAQP,SAIe,KAAzBK,EARD,SAAC,GAAD,IAAGL,EAAH,EAAGA,MAAH,OAAe,sBAAMY,UAAU,iBAAhB,SAAkCZ,OCkBhDK,eAVS,SAAAC,GACtB,MAAO,CACLF,KAAME,EAAMC,QAAQH,SAIG,SAAAI,GAAQ,MAAK,CACtCM,SAAU,SAAAC,GAAC,OAAIP,EAASE,EAA0BM,OAAOD,EAAEE,OAAOjB,aAGrDK,EAjBF,SAAC,GAAD,IAAGD,EAAH,EAAGA,KAAMU,EAAT,EAASA,SAAT,OACX,sBAAKF,UAAU,OAAf,UACE,mDACA,uBAAOX,KAAK,OAAOD,MAAOI,EAAMU,SAAUA,U,MCW/BI,MAZf,WACE,OACE,sBAAKN,UAAU,UAAf,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,IAEA,cAAC,EAAD,QCHSO,E,4JALb,WACE,OAAO,cAAC,EAAD,Q,GAFOC,a,eCuBlB,IAKeC,EALQC,0BAAgB,CACrCtB,MAzBF,WAA0C,IAApBM,EAAmB,uDAAX,EAAGiB,EAAQ,uCAC/BtB,EAAkBsB,EAAlBtB,KAAME,EAAYoB,EAAZpB,QAEd,OAAQF,GACN,KAAKC,EACH,OAAOI,EAAQH,EACjB,KAAKD,EACH,OAAOI,EAAQH,EACjB,QACE,OAAOG,IAiBXF,KAbF,WAAyC,IAApBE,EAAmB,uDAAX,EAAGiB,EAAQ,uCAC9BtB,EAAkBsB,EAAlBtB,KAAME,EAAYoB,EAAZpB,QAEd,OAAQF,GACN,KAAKC,EACH,OAAOC,EACT,QACE,OAAOG,MCnBPkB,EAAcF,0BAAgB,CAClCf,QAASc,IAKII,EAFDC,sBAAYF,EAAaG,iCCFvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.4af320ee.chunk.js","sourcesContent":["const INCREMENT = 'counter/Increment';\r\nconst DECREMENT = 'counter/Decrement';\r\nconst CHANGE_STEP = 'counter/ChangeStep';\r\n\r\nexport default { INCREMENT, DECREMENT, CHANGE_STEP };\r\n","import types from './counetr-types';\r\n\r\nconst counterIncrement = value => ({\r\n  type: types.INCREMENT,\r\n  payload: value,\r\n});\r\n\r\nconst counterDecrement = value => ({\r\n  type: types.DECREMENT,\r\n  payload: value,\r\n});\r\n\r\nconst counterChangeStep = step => ({\r\n  type: types.CHANGE_STEP,\r\n  payload: step,\r\n});\r\n\r\nexport default { counterIncrement, counterDecrement, counterChangeStep };\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/counter/counter-actions';\n\nconst Controls = ({ step, onIncrement, onDecrement }) => (\n  <div className=\"Counter__controls\">\n    <button type=\"button\" onClick={() => onIncrement(step)}>\n      Увеличить на {step}\n    </button>\n    <button type=\"button\" onClick={() => onDecrement(step)}>\n      Уменьшить на {step}\n    </button>\n  </div>\n);\n\nconst mapStateToProps = state => {\n  return {\n    step: state.counter.step,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onIncrement: value => dispatch(actions.counterIncrement(value)),\n  onDecrement: value => dispatch(actions.counterDecrement(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Controls);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Value = ({ value }) => <span className=\"Counter__value\">{value}</span>;\n\nconst mapStateToProps = state => {\n  return {\n    value: state.counter.value,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Value);\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/counter/counter-actions';\r\n\r\nconst Step = ({ step, onChange }) => (\r\n  <div className=\"step\">\r\n    <p>Шаг</p>\r\n    <input type=\"text\" value={step} onChange={onChange} />\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    step: state.counter.step,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(actions.counterChangeStep(Number(e.target.value))),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Step);\r\n","import React from 'react';\nimport Controls from './Controls';\nimport Value from './Value';\nimport Step from './Step';\nimport './Counter.css';\n\nfunction Counter() {\n  return (\n    <div className=\"Counter\">\n      <Step />\n\n      <Value />\n\n      <Controls />\n    </div>\n  );\n}\n\nexport default Counter;\n","import React, { Component } from 'react';\n\nimport Counter from './components/Counter';\n\nclass App extends Component {\n  render() {\n    return <Counter />;\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport types from './counetr-types';\r\n\r\nfunction valueReducer(state = 0, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case types.INCREMENT:\r\n      return state + payload;\r\n    case types.DECREMENT:\r\n      return state - payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction stepReducer(state = 5, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case types.CHANGE_STEP:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst counterReducer = combineReducers({\r\n  value: valueReducer,\r\n  step: stepReducer,\r\n});\r\n\r\nexport default counterReducer;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport counterReducer from './counter/counter-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  counter: counterReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}